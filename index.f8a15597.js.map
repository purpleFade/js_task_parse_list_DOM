{"mappings":"ACEA,IAUQ,EASA,EAMA,EAzBF,EAAoB,SAAS,gBAAgB,CAAC,MAC9C,EAAoB,MAAM,IAAI,CAAC,GAE/B,EAAkB,SAAC,CAAzB,EAGE,OAAO,SAFc,EAAa,OAAO,CAAC,SAAU,IAEtB,GAChC,EAKE,CAFM,EAAa,MAAM,IAAI,CAgCtB,IA9BI,IAAI,CAAC,SAAC,CAAA,CAAG,CAApB,EACE,IAAM,EAAU,EAAgB,EAAE,OAAO,CAAC,MAAM,EAGhD,OAAO,AAFS,EAAgB,EAAE,OAAO,CAAC,MAAM,EAE/B,CACnB,GAEM,EAAgB,CAAU,CAAC,EAAE,CAAC,UAAU,CAE9C,EAAW,OAAO,CAAC,SAAC,CAApB,EAA6B,OAAA,EAAc,WAAW,CAAC,E,GAIjD,EAAkB,EAAE,CAE1B,AAgBW,EAhBN,OAAO,CAAC,SAAC,CAAd,EACE,IAAM,EAAW,CACf,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAgB,EAAK,OAAO,CAAC,MAAM,EAC3C,IAAK,SAAS,EAAK,OAAO,CAAC,GAAG,CAAE,GAClC,EAEA,EAAgB,IAAI,CAAC,EACvB,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar employeeListItems = document.querySelectorAll(\"li\");\nvar employeeListArray = Array.from(employeeListItems);\nvar convertToNumber = function(salaryString) {\n    var numberString = salaryString.replace(/[^\\d]/g, \"\");\n    return parseInt(numberString, 10);\n};\nvar sortList = function(list) {\n    var sortedList = Array.from(list);\n    sortedList.sort(function(a, b) {\n        var salaryA = convertToNumber(a.dataset.salary);\n        var salaryB = convertToNumber(b.dataset.salary);\n        return salaryB - salaryA;\n    });\n    var parentElement = sortedList[0].parentNode;\n    sortedList.forEach(function(item) {\n        return parentElement.appendChild(item);\n    });\n};\nvar getEmployees = function(list) {\n    var employeeObjects = [];\n    list.forEach(function(item) {\n        var employee = {\n            name: item.textContent.trim(),\n            position: item.dataset.position,\n            salary: convertToNumber(item.dataset.salary),\n            age: parseInt(item.dataset.age, 10)\n        };\n        employeeObjects.push(employee);\n    });\n    return employeeObjects;\n};\n// Call both functions\nsortList(employeeListItems);\ngetEmployees(employeeListArray);\n\n//# sourceMappingURL=index.f8a15597.js.map\n","'use strict';\n\nconst employeeListItems = document.querySelectorAll('li');\nconst employeeListArray = Array.from(employeeListItems);\n\nconst convertToNumber = (salaryString) => {\n  const numberString = salaryString.replace(/[^\\d]/g, '');\n\n  return parseInt(numberString, 10);\n};\n\nconst sortList = (list) => {\n  const sortedList = Array.from(list);\n\n  sortedList.sort((a, b) => {\n    const salaryA = convertToNumber(a.dataset.salary);\n    const salaryB = convertToNumber(b.dataset.salary);\n\n    return salaryB - salaryA;\n  });\n\n  const parentElement = sortedList[0].parentNode;\n\n  sortedList.forEach((item) => parentElement.appendChild(item));\n};\n\nconst getEmployees = (list) => {\n  const employeeObjects = [];\n\n  list.forEach((item) => {\n    const employee = {\n      name: item.textContent.trim(),\n      position: item.dataset.position,\n      salary: convertToNumber(item.dataset.salary),\n      age: parseInt(item.dataset.age, 10),\n    };\n\n    employeeObjects.push(employee);\n  });\n\n  return employeeObjects;\n};\n\n// Call both functions\nsortList(employeeListItems);\ngetEmployees(employeeListArray);\n"],"names":["sortedList","parentElement","employeeObjects","employeeListItems","document","querySelectorAll","employeeListArray","Array","from","convertToNumber","salaryString","parseInt","replace","sort","a","b","salaryA","dataset","salary","salaryB","parentNode","forEach","item","appendChild","list","employee","name","textContent","trim","position","age","push"],"version":3,"file":"index.f8a15597.js.map"}